<?php

namespace AppBundle\Repository;
use AppBundle\Entity\Company;
use Symfony\Component\HttpFoundation\Request;

/**
 * CrawlerLogRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CrawlerLogRepository extends \Doctrine\ORM\EntityRepository
{
    public function findByDate($date){
        if( $date )
            return $this->findBy(array('date'=>$date ),array('id'=>'desc'));
        return $this->findBy(array(), array('id'=>'desc'));
    }

    /**
     * @param Request $request
     * @param bool $group 是否需要group by 统计 sum
     * @return array
     */
    public function findByCompaniesDate(Request $request, $group=false){

        $dql = "SELECT c ";
        $dql .= $group ? ", SUM(cl.crawlerCount) AS sumCrawler " : "";
        $dql .= "FROM AppBundle:Company AS c
                JOIN c.crawlerLogs AS cl
                WHERE 1=1 ";
        $params = [];

        if($request->query->get('area')){
            $dql .= " AND c.areaId = :area ";
            $params['area'] = $request->query->get('area');
        }
        if($request->request->get('c.aid') && is_array($request->request->get('c.aid'))){
            $aid = $request->request->get('c.aid');
            $dql .= " AND c.areaId ".$aid["logic"]." :areaId ";
            $params['areaId'] = $aid["val"];
        }
        if($request->query->get('company')){
            $dql .= " AND cl.companyId IN (:companies) ";
            $params['companies'] = explode(',', $request->query->get('company'));
        }
        if($request->query->get('date')){
            $_date = new \DateTime($request->query->get('date'));
            $dql .= " AND cl.date = :date ";
            $params['date'] = $_date->format('Y-m-d');
        }

        $status = $request->query->get('status') ? $request->query->get('status') : Company::AUTO;
        if($status){
            $dql .= " AND c.status = :status ";
            $params['status'] = $status;
        }

        if( $request->request->get('isSuccess')===true || $request->request->get('isSuccess')===false ){
            $dql .= " AND cl.isSuccess = :isSuccess ";
            $params['isSuccess'] = $request->request->get('isSuccess');
        }

        if($group){
            $dql .= $request->query->get('date') ? " GROUP BY cl.date, cl.companyId " : " GROUP BY cl.companyId ";
        }

        $dql .= " ORDER BY c.areaId ASC, c.countryId ASC , c.id ASC";

        return $this->getEntityManager()
            ->createQuery($dql)
            ->setParameters($params)
            ->getResult();
    }

    public function findCrawlerCountByDate(Request $request){

        $dql = "SELECT SUM(cl.crawlerCount) AS sumCrawler
                FROM AppBundle:CrawlerLog AS cl
                WHERE 1=1
                AND cl.date=:date ";

        $date = new \DateTime($request->query->get('date'));

        $res = $this->getEntityManager()
            ->createQuery($dql)
            ->setParameters(array('date'=>$date->format("Y-m-d")))
            ->getResult();
        return $res[0]['sumCrawler'];
    }

}
