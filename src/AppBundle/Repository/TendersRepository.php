<?php

namespace AppBundle\Repository;

use AppBundle\Entity\Tenders;
use Knp\Component\Pager\Paginator;
use Symfony\Component\HttpFoundation\Request;

/**
 * TendersRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TendersRepository extends \Doctrine\ORM\EntityRepository
{
    protected $params = [];

    protected function _findByDQL(Request $request){

        $dql = "SELECT t FROM AppBundle:Tenders t ";
        if( $request->request->get('isPush') ){
            $dql .= " JOIN t.company c ";
        }
        $dql .= " WHERE 1 = 1 ";
        /*************************条件查询start*****************************/
        $date = $request->query->get('date') ? $request->query->get('date') : date('Y-m-d');
        $date = new \DateTime($date);
        $dql .= " AND t.date = '{$date->format('Y-m-d')}' ";

        if( $request->query->get('company') ){
            $dql .= " AND t.companyId = '{$request->query->get('company')}' ";
        }
        if( $request->query->get('remarks') ){
            $dql .= " AND t.remarks = :remarks ";
            $this->params['remarks'] = $request->query->get('remarks');
        }
        if( $request->request->get('isPush') ){
            $dql .= " AND c.isPush = :isPush ";
            $this->params['isPush'] = $request->request->get('isPush');
        }
        if($request->request->get('c.aid') && is_array($request->request->get('c.aid'))){
            $aid = $request->request->get('c.aid');
            $dql .= " AND c.areaId ".$aid["logic"]." :areaId ";
            $this->params['areaId'] = $aid["val"];
        }
        if( $request->request->get('status') ){
            $dql .= " AND t.status = :status ";
            $this->params['status'] = $request->request->get('status');
        }
        /*************************条件查询end*****************************/

        //排序
        $dql .= " ORDER BY t.id DESC";

        return $dql;
    }

    public function findForPush(Request $request){
        if(!$request->request->get('isPush')){
            $request->request->set('isPush', true);
        }

        $dql = $this->_findByDQL($request);
        return $this->getEntityManager()
            ->createQuery($dql)
            ->setParameters($this->params)
            ->getResult();
    }

    protected function _getPage($request){
        return $request->attributes->get('page') ? $request->attributes->get('page') : 1;
    }

    public function findByPage(Paginator $paginator, Request $request){

        $dql   = $this->_findByDQL($request);
        $query = $this->getEntityManager()->createQuery($dql)->setParameters($this->params);

        //分页
        $pagination = $paginator->paginate(
            $query,
            $request->query->get('page', $this->_getPage($request))/*page number*/,
            Tenders::NUM_ITEMS/*limit per page*/
        );
        return $pagination;
    }
}
