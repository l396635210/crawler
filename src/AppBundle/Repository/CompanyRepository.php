<?php

namespace AppBundle\Repository;
use AppBundle\Entity\User;
use Symfony\Component\HttpFoundation\Request;
use AppBundle\Entity\Company;
/**
 * CompanyRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CompanyRepository extends \Doctrine\ORM\EntityRepository
{
    public function findForCrawler(Request $request){
        if($request->request->get('area'))
            $list = $this->findBy(array('areaId'=>$request->request->get('area')));
        elseif($request->request->get('country'))
            $list = $this->findBy(array('countryId'=>$request->request->get('country')));
        elseif($request->request->get('company'))
            $list = $this->findBy(array('id'=>$request->request->get('company')));
        else
            $list = $this->findBy(array('status'=>1));
        return $list;
    }

    public function findByUser(User $user){
        $roles = $user->getRoles();
        switch($roles[0]){
            case 'ROLE_ADMIN':
                /*
                $list1 = $this->findBy(array('status'=>Company::AUTO),array('sort'=>'ASC'));
                $list2 = $this->findBy(array('status'=>Company::ARTI),array('sort'=>'ASC'));
                $list  = array_merge($list1, $list2);
                */
                $qb = $this->createQueryBuilder('c');
                $qb ->where('c.status != :status')
                    ->orderBy('c.sort', 'ASC')
                    ->setParameter('status', 0);
                $list = $qb->getQuery()
                    ->getResult();
                break;

            case 'ROLE_SUPER_ADMIN':
                $list = $this->findBy([],['sort'=>'ASC']);
                break;
        }

        return $list;
    }
}
