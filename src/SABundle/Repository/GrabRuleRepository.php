<?php

namespace SABundle\Repository;
use ReportBundle\Entity\Report;
use SABundle\Entity\GrabRule;

/**
 * GrabRuleRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class GrabRuleRepository extends \Doctrine\ORM\EntityRepository
{

    public function findGrabDatasForSendMail($criteria){
        $params = [];
        $dql = "SELECT gr, gl, gd, SUM(gl.count) 
                FROM SABundle:GrabRule AS gr 
                JOIN gr.grabLogs AS gl 
                JOIN gr.grabDatas AS gd 
                WHERE 1=1 ";
        if(isset($criteria["entity"]) && $criteria["gr"]["entity"]){
            $dql .= " AND gr.entity = :gr_entity ";
            $params["gr_entity"] = $criteria["gr"]["entity"];
        }
        if(isset($criteria["entityId"]) && $criteria["gr"]["entityId"]){
            $dql .= " AND gr.entity = :gr_entityId ";
            $params["gr_entityId"] = $criteria["gr"]["entityId"];
        }
        if(isset($criteria["gl"]["createDate"]) && $criteria["gl"]["createDate"]){
            $dql .= " AND gl.createDate = :grabDate ";
            $dql .= " AND gd.createDate = :grabDate ";
            $params["grabDate"] = $criteria["gl"]["createDate"]->format("Y-m-d");
        }

        $dql .= " GROUP BY gr.id, gl.createDate";
        return $this->getEntityManager()
            ->createQuery($dql)
            ->setParameters($params)
            ->getResult();
    }

    public function findGrabRuleByEntity($entity, $entityIds=null){
        $criteria = $entity ? ["entity"=>$entity] : [];
        if($entityIds){
            $criteria["entityId"] = $entityIds;
        }
        $criteria["status"] = 1;
        $grabRule = $this->findBy($criteria);
        return $grabRule;
    }

    public function findGrabRuleIdsByEntity($entity, $entityIds=null){
        $grabRules = $this->findGrabRuleByEntity($entity, $entityIds);
        $ids = [];
        foreach ($grabRules as $grabRule){
            $ids[] = $grabRule->getId();
        }
        return $ids;
    }

}
